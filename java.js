window.showPage = function (pageId) {
  const activePage = document.querySelector('.page.active');

  if (activePage) {
    activePage.style.animation = 'fadeOutPage 0.5s ease forwards';

    activePage.addEventListener('animationend', function handleFadeOut() {
      activePage.classList.remove('active');
      activePage.style.animation = '';
      activePage.removeEventListener('animationend', handleFadeOut);

      const newPage = document.getElementById(pageId);
      if (newPage) {
        newPage.classList.add('active');
        newPage.style.animation = 'fadeInPage 0.5s ease forwards'; // –ü—Ä–æ–∏–≥—Ä—ã–≤–∞–µ—Ç—Å—è 1 —Ä–∞–∑
      }
    });
  } else {
    const newPage = document.getElementById(pageId);
    if (newPage) {
      newPage.classList.add('active');
      newPage.style.animation = 'fadeInPage 0.5s ease forwards'; // –ü—Ä–æ–∏–≥—Ä—ã–≤–∞–µ—Ç—Å—è 1 —Ä–∞–∑
    }
  }

  document.querySelectorAll('.nav-btn').forEach(btn => btn.classList.remove('active-nav-btn'));
  const activeButton = document.querySelector(`.nav-btn[onclick="showPage('${pageId}')"]`);
  if (activeButton) {
    activeButton.classList.add('active-nav-btn');
  }
};

document.addEventListener('DOMContentLoaded', () => {
  const buySubscriptionButton = document.querySelector('.button-container .btn:first-child');
  const subscriptionMenu = document.getElementById('subscription-menu');
  const cancelSubscriptionButton = document.getElementById('subscribe-cancel-btn');
  const confirmSubscriptionButton = document.getElementById('subscribe-confirm-btn');
  const subscriptionTypeSelect = document.getElementById('subscription-type');
  const subscriptionDurationSelect = document.getElementById('subscription-duration');
  const subscriptionPrice = document.getElementById('subscription-price');
  const subscriptionDescription = document.getElementById('subscription-description');
  const activeSubscriptionDiv = document.getElementById('active-subscription');
  const cancelSubscriptionConfirmButton = document.getElementById('cancel-subscription-confirm-btn');
  const cancelSubscriptionCancelButton = document.getElementById('cancel-subscription-cancel-btn');
  const cancelSubscriptionMenu = document.getElementById('cancel-subscription-menu');

  // –°—Ç–æ–∏–º–æ—Å—Ç–∏ –ø–æ–¥–ø–∏—Å–æ–∫
  const prices = {
    client: { 1: 600, 3: 1400, 6: 4000 },
    mover: { 1: 150, 3: 350, 6: 800 }
  };

  // –û–ø–∏—Å–∞–Ω–∏—è –ø–æ–¥–ø–∏—Å–æ–∫
  const descriptions = {
    client: `
      <h3>–ß—Ç–æ –¥–∞—ë—Ç –ø–æ–¥–ø–∏—Å–∫–∞ –ó–∞–∫–∞–∑—á–∏–∫+</h3>
      <p>üíº–ù–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞—è–≤–æ–∫</p>
      <p>üìå–ë–µ—Å–ø–ª–∞—Ç–Ω–æ–µ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∏–µ –∑–∞—è–≤–æ–∫</p>
    `,
    mover: `
      <h3>–ß—Ç–æ –¥–∞—ë—Ç –ø–æ–¥–ø–∏—Å–∫–∞ –ì—Ä—É–∑—á–∏–∫+</h3>
      <p>‚≠ê –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç –Ω–∞ –∑–∞—è–≤–∫—É</p>
    `
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –∏ –æ–ø–∏—Å–∞–Ω–∏—è
  function updateSubscriptionInfo() {
    const type = subscriptionTypeSelect.value;
    const duration = subscriptionDurationSelect.value;
    const price = prices[type][duration];
    subscriptionPrice.textContent = `–¶–µ–Ω–∞: ${price} —Ä—É–±`;
    subscriptionDescription.innerHTML = descriptions[type];
  }

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∞–∫—Ç–∏–≤–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–∏
  function displayActiveSubscription() {
    const activeSubscription = JSON.parse(localStorage.getItem('activeSubscription'));
    if (activeSubscription) {
      activeSubscriptionDiv.textContent = activeSubscription.type;
      activeSubscriptionDiv.style.display = "block"; // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–¥–ø–∏—Å–∫–µ
    } else {
      activeSubscriptionDiv.textContent = ""; // –û—á–∏—â–∞–µ–º —Ç–µ–∫—Å—Ç, –µ—Å–ª–∏ –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–µ –∫—É–ø–ª–µ–Ω–∞
      activeSubscriptionDiv.style.display = "none"; // –°–∫—Ä—ã–≤–∞–µ–º –±–ª–æ–∫ —Å –ø–æ–¥–ø–∏—Å–∫–æ–π
    }
  }

  // –û—Ç–∫—Ä—ã—Ç—å –º–µ–Ω—é –ø–æ–¥–ø–∏—Å–∫–∏
  buySubscriptionButton.addEventListener('click', () => {
    subscriptionMenu.classList.remove('hidden');
    subscriptionMenu.classList.add('show');
    updateSubscriptionInfo(); // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏
  });

  // –ó–∞–∫—Ä—ã—Ç—å –º–µ–Ω—é –ø–æ–¥–ø–∏—Å–∫–∏
  cancelSubscriptionButton.addEventListener('click', () => {
    subscriptionMenu.classList.remove('show');
    setTimeout(() => subscriptionMenu.classList.add('hidden'), 400);
  });

  // –û–±–Ω–æ–≤–∏—Ç—å —Ü–µ–Ω—É –∏ –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ç–∏–ø–∞ –∏–ª–∏ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –ø–æ–¥–ø–∏—Å–∫–∏
  subscriptionTypeSelect.addEventListener('change', updateSubscriptionInfo);
  subscriptionDurationSelect.addEventListener('change', updateSubscriptionInfo);

  // –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏
  confirmSubscriptionButton.addEventListener('click', () => {
    const selectedType = subscriptionTypeSelect.options[subscriptionTypeSelect.selectedIndex].text;
    const selectedDuration = subscriptionDurationSelect.value;
    const price = subscriptionPrice.textContent.match(/\d+/)[0];

    // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–∏ –≤ localStorage
    localStorage.setItem('activeSubscription', JSON.stringify({
      type: selectedType
    }));

    displayActiveSubscription(); // –û–±–Ω–æ–≤–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–∏

    subscriptionMenu.classList.remove('show');
    setTimeout(() => subscriptionMenu.classList.add('hidden'), 400);
  });

  // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–∏ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
  displayActiveSubscription();

  // –û—Ç–º–µ–Ω–∞ –ø–æ–¥–ø–∏—Å–∫–∏
  activeSubscriptionDiv.addEventListener('click', () => {
    cancelSubscriptionMenu.classList.remove('hidden');
    cancelSubscriptionMenu.classList.add('show');
  });

  // –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ—Ç–º–µ–Ω—ã –ø–æ–¥–ø–∏—Å–∫–∏
  cancelSubscriptionConfirmButton.addEventListener('click', () => {
    localStorage.removeItem('activeSubscription'); // –£–¥–∞–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–¥–ø–∏—Å–∫–µ
    displayActiveSubscription(); // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–∏
    cancelSubscriptionMenu.classList.remove('show');
    setTimeout(() => cancelSubscriptionMenu.classList.add('hidden'), 400);
  });

  // –û—Ç–º–µ–Ω–∞ –æ—Ç–º–µ–Ω—ã –ø–æ–¥–ø–∏—Å–∫–∏
  cancelSubscriptionCancelButton.addEventListener('click', () => {
    cancelSubscriptionMenu.classList.remove('show');
    setTimeout(() => cancelSubscriptionMenu.classList.add('hidden'), 400);
  });
});

document.addEventListener('DOMContentLoaded', () => {
  const createOrderButton = document.getElementById('create-order-btn');
  const cancelOrderButton = document.getElementById('cancel-order-btn');
  const submitOrderButton = document.getElementById('submit-order-btn');
  const orderForm = document.getElementById('create-order-form');
  const notification = document.getElementById('notification');
  const viewActiveOrdersButton = document.getElementById('view-active-orders-btn');
  const cityInput = document.getElementById('city');
  const citySuggestions = document.getElementById('city-suggestions');
  const pinMenu = document.getElementById('pin-menu');
  const pinConfirmButton = document.getElementById('pin-confirm-btn');

const availableCities = [
  "–ú–æ—Å–∫–≤–∞", "–¢—é–º–µ–Ω—å", "–ö—É—Ä–≥–∞–Ω", "–ß–µ–ª—è–±–∏–Ω—Å–∫", "–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥", "–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥","–ö–∞–∑–∞–Ω—å","–í–ª–∞–¥–∏–≤–æ—Å—Ç–æ–∫","–û–º—Å–∫",
  "–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫", "–ö—Ä–∞—Å–Ω–æ—è—Ä—Å–∫", "–ü–µ—Ä–º—å", "–ù–∏–∂–Ω–∏–π –ù–æ–≤–≥–æ—Ä–æ–¥", "–ö—Ä–∞—Å–Ω–æ–¥–∞—Ä", "–í–æ—Ä–æ–Ω–µ–∂", "–†–æ—Å—Ç–æ–≤-–Ω–∞-–î–æ–Ω—É", 
  "–£—Ñ–∞", "–°–∞–º–∞—Ä–∞", "–ß–µ–±–æ–∫—Å–∞—Ä—ã", "–ò–∂–µ–≤—Å–∫", "–Ø—Ä–æ—Å–ª–∞–≤–ª—å", "–•–∞–±–∞—Ä–æ–≤—Å–∫", "–°–∞—Ä–∞—Ç–æ–≤", "–¢–æ–ª—å—è—Ç—Ç–∏", "–ë–∞—Ä–Ω–∞—É–ª", 
  "–ò—Ä–∫—É—Ç—Å–∫", "–£–ª—å—è–Ω–æ–≤—Å–∫", "–í–æ–ª–≥–æ–≥—Ä–∞–¥", "–ö–∞–ª–∏–Ω–∏–Ω–≥—Ä–∞–¥", "–ú–∞—Ö–∞—á–∫–∞–ª–∞", "–ù–æ–≤–æ–∫—É–∑–Ω–µ—Ü–∫", "–ö–µ–º–µ—Ä–æ–≤–æ", "–†—è–∑–∞–Ω—å", 
  "–ù–∞–±–µ—Ä–µ–∂–Ω—ã–µ –ß–µ–ª–Ω—ã", "–°—Ç–∞–≤—Ä–æ–ø–æ–ª—å", "–û—Ä–µ–Ω–±—É—Ä–≥", "–°–æ—á–∏", "–¢–≤–µ—Ä—å", "–í–ª–∞–¥–∏–º–∏—Ä", "–ö—É—Ä—Å–∫", "–õ–∏–ø–µ—Ü–∫", 
  "–¢—É–ª–∞", "–ö–∏—Ä–æ–≤", "–ß–µ–ª—è–±–∏–Ω—Å–∫", "–í–æ–ª–æ–≥–¥–∞", "–ß–∏—Ç–∞", "–ü–µ–Ω–∑–∞", "–ë—Ä—è–Ω—Å–∫", "–ê—Ä—Ö–∞–Ω–≥–µ–ª—å—Å–∫", "–ö–∞–ª—É–≥–∞", 
  "–°–º–æ–ª–µ–Ω—Å–∫", "–ê—Å—Ç—Ä–∞—Ö–∞–Ω—å", "–ë–µ–ª–≥–æ—Ä–æ–¥", "–ù–∏–∂–Ω–∏–π –¢–∞–≥–∏–ª", "–ü–µ—Ç—Ä–æ–∑–∞–≤–æ–¥—Å–∫", "–°—ã–∫—Ç—ã–≤–∫–∞—Ä", "–ß–µ—Ä–µ–ø–æ–≤–µ—Ü", 
  "–Ø–∫—É—Ç—Å–∫", "–•–∏–º–∫–∏", "–ë–∞–ª–∞—à–∏—Ö–∞", "–ö—Ä–∞—Å–Ω–æ–≥–æ—Ä—Å–∫", "–ü–æ–¥–æ–ª—å—Å–∫", "–ö–æ—Ä–æ–ª—ë–≤", "–õ—é–±–µ—Ä—Ü—ã", "–ú—ã—Ç–∏—â–∏", 
  "–û–¥–∏–Ω—Ü–æ–≤–æ", "–î–∑–µ—Ä–∂–∏–Ω—Å–∫–∏–π", "–≠–ª–µ–∫—Ç—Ä–æ—Å—Ç–∞–ª—å", "–†–µ—É—Ç–æ–≤", "–ö–æ–ª–æ–º–Ω–∞", "–°–µ—Ä–ø—É—Ö–æ–≤", "–í–∏–¥–Ω–æ–µ", "–©—ë–ª–∫–æ–≤–æ", 
  "–î–æ–º–æ–¥–µ–¥–æ–≤–æ", "–†–∞–º–µ–Ω—Å–∫–æ–µ", "–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫", "–ö—Ä–∞—Å–Ω–æ—è—Ä—Å–∫", "–ü–µ—Ä–º—å", "–ù–∏–∂–Ω–∏–π –ù–æ–≤–≥–æ—Ä–æ–¥", "–ö—Ä–∞—Å–Ω–æ–¥–∞—Ä", 
  "–í–æ—Ä–æ–Ω–µ–∂", "–†–æ—Å—Ç–æ–≤-–Ω–∞-–î–æ–Ω—É", "–£—Ñ–∞", "–°–∞–º–∞—Ä–∞", "–ß–µ–±–æ–∫—Å–∞—Ä—ã", "–ò–∂–µ–≤—Å–∫", "–Ø—Ä–æ—Å–ª–∞–≤–ª—å", "–•–∞–±–∞—Ä–æ–≤—Å–∫", "–°–∞—Ä–∞—Ç–æ–≤", 
  "–¢–æ–ª—å—è—Ç—Ç–∏", "–ë–∞—Ä–Ω–∞—É–ª", "–ò—Ä–∫—É—Ç—Å–∫", "–£–ª—å—è–Ω–æ–≤—Å–∫", "–í–æ–ª–≥–æ–≥—Ä–∞–¥", "–ö–∞–ª–∏–Ω–∏–Ω–≥—Ä–∞–¥", "–ú–∞—Ö–∞—á–∫–∞–ª–∞", "–ù–æ–≤–æ–∫—É–∑–Ω–µ—Ü–∫", 
  "–ö–µ–º–µ—Ä–æ–≤–æ", "–†—è–∑–∞–Ω—å", "–ù–∞–±–µ—Ä–µ–∂–Ω—ã–µ –ß–µ–ª–Ω—ã", "–°—Ç–∞–≤—Ä–æ–ø–æ–ª—å", "–û—Ä–µ–Ω–±—É—Ä–≥", "–°–æ—á–∏", "–¢–≤–µ—Ä—å", "–í–ª–∞–¥–∏–º–∏—Ä", 
  "–ö—É—Ä—Å–∫", "–õ–∏–ø–µ—Ü–∫", "–¢—É–ª–∞", "–ö–∏—Ä–æ–≤", "–ß–µ–ª—è–±–∏–Ω—Å–∫", "–í–æ–ª–æ–≥–¥–∞", "–ß–∏—Ç–∞", "–ü–µ–Ω–∑–∞", "–ë—Ä—è–Ω—Å–∫", "–ê—Ä—Ö–∞–Ω–≥–µ–ª—å—Å–∫", 
  "–ö–∞–ª—É–≥–∞", "–°–º–æ–ª–µ–Ω—Å–∫", "–ê—Å—Ç—Ä–∞—Ö–∞–Ω—å", "–ë–µ–ª–≥–æ—Ä–æ–¥", "–ù–∏–∂–Ω–∏–π –¢–∞–≥–∏–ª", "–ü–µ—Ç—Ä–æ–∑–∞–≤–æ–¥—Å–∫", "–°—ã–∫—Ç—ã–≤–∫–∞—Ä", 
  "–ß–µ—Ä–µ–ø–æ–≤–µ—Ü", "–Ø–∫—É—Ç—Å–∫", "–•–∏–º–∫–∏", "–ë–∞–ª–∞—à–∏—Ö–∞", "–ö—Ä–∞—Å–Ω–æ–≥–æ—Ä—Å–∫", "–ü–æ–¥–æ–ª—å—Å–∫", "–ö–æ—Ä–æ–ª—ë–≤", "–õ—é–±–µ—Ä—Ü—ã", 
  "–ú—ã—Ç–∏—â–∏", "–û–¥–∏–Ω—Ü–æ–≤–æ", "–î–∑–µ—Ä–∂–∏–Ω—Å–∫–∏–π", "–≠–ª–µ–∫—Ç—Ä–æ—Å—Ç–∞–ª—å", "–†–µ—É—Ç–æ–≤", "–ö–æ–ª–æ–º–Ω–∞", "–°–µ—Ä–ø—É—Ö–æ–≤", "–í–∏–¥–Ω–æ–µ", 
  "–©—ë–ª–∫–æ–≤–æ", "–î–æ–º–æ–¥–µ–¥–æ–≤–æ", "–†–∞–º–µ–Ω—Å–∫–æ–µ", "–ö—Ä—ã–º", "–î–æ–Ω–µ—Ü–∫", "–õ—É–≥–∞–Ω—Å–∫", "–ú–∞—Ä–∏—É–ø–æ–ª—å"
];

  function openOrderForm() {
    createOrderButton.style.display = 'none';
    orderForm.classList.remove('hidden');
    orderForm.classList.add('full-screen');
  }

  function closeOrderForm() {
    orderForm.classList.add('hidden');
    orderForm.classList.remove('full-screen');
    createOrderButton.style.display = 'block';
  }

  function showNotification(message) {
    notification.textContent = message;
    notification.style.opacity = 1;
    setTimeout(() => {
      notification.style.opacity = 0;
    }, 2000);
  }

  function deleteOrder(orderElement) {
    orderElement.classList.add('fade-out');
    setTimeout(() => {
      orderElement.remove();
    }, 500);
  }

  function confirmOrder(orderElement) {
    orderElement.classList.add('confirmed');
    orderElement.classList.remove('unconfirmed');
    orderElement.querySelector('.confirm-btn').style.display = 'none';
    
    const pinBtn = document.createElement('button');
    pinBtn.classList.add('btn', 'pin-btn');
    pinBtn.textContent = 'üìå –ó–∞–∫—Ä–µ–ø–∏—Ç—å';
    orderElement.appendChild(pinBtn);

    pinBtn.addEventListener('click', () => {
      pinMenu.classList.remove('hidden'); // –û—Ç–∫—Ä—ã—Ç—å –º–µ–Ω—é –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∏—è
      pinMenu.classList.add('show'); // –î–æ–±–∞–≤–∏—Ç—å –∫–ª–∞—Å—Å –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ —Ü–µ–Ω—Ç—Ä—É

      // –°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ç–µ–∫—É—â—É—é –∑–∞—è–≤–∫—É –∏ –∫–Ω–æ–ø–∫—É –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ—Å–ª–µ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∏—è
      pinMenu.currentOrderElement = orderElement;
      pinMenu.currentPinBtn = pinBtn;
    });
  }

  function submitOrder() {
    const city = document.getElementById('city').value;
    const address = document.getElementById('address').value;
    const task = document.getElementById('task').value;
    const startTime = document.getElementById('start-time').value;
    const payment = document.getElementById('payment').value;
    const people = document.getElementById('people').value;
    const comment = document.getElementById('comment').value;

    if (availableCities.includes(city)) {
      const newOrder = document.createElement('div');
      newOrder.classList.add('order-item', 'unconfirmed');

      newOrder.innerHTML = `
        <p><strong>üèôÔ∏è –ì–æ—Ä–æ–¥:</strong> <span data-city>${city}</span></p>
        <p><strong>üìç –ê–¥—Ä–µ—Å:</strong> <span data-address>${address}</span></p>
        <p><strong>üìù –ó–∞–¥–∞–Ω–∏–µ:</strong> <span data-task>${task}</span></p>
        <p><strong>‚è∞ –í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞:</strong> <span data-start-time>${startTime}</span></p>
        <p><strong>üí∞ –û–ø–ª–∞—Ç–∞(—Ä—É–±/—á–∞—Å):</strong> <span data-payment>${payment} ‚ÇΩ</span></p>
        <p><strong>üë• –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª—é–¥–µ–π:</strong> <span data-people>${people}</span></p>
        <p><strong>üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:</strong> <span data-comment>${comment}</span></p>
        <button class="btn confirm-btn">–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∑–∞—è–≤–∫—É</button>
        <button class="btn cancel-btn">–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞—è–≤–∫—É</button>
      `;

      newOrder.querySelector('.confirm-btn').addEventListener('click', () => confirmOrder(newOrder));
      newOrder.querySelector('.cancel-btn').addEventListener('click', () => deleteOrder(newOrder));

      const myOrdersSection = document.querySelector('.my-orders-title');
      myOrdersSection.insertAdjacentElement('afterend', newOrder);

      showNotification('–ó–∞—è–≤–∫–∞ —Å–æ–∑–¥–∞–Ω–∞!');
      closeOrderForm();
      showPage('orders');
    } else {
      showNotification('–ù–µ–≤–µ—Ä–Ω–æ —É–∫–∞–∑–∞–Ω –≥–æ—Ä–æ–¥. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥ –∏–∑ —Å–ø–∏—Å–∫–∞.');
    }
  }

  function updateCitySuggestions() {
    const inputValue = cityInput.value.toLowerCase();
    const suggestions = availableCities.filter(city => 
      city.toLowerCase().includes(inputValue)
    );

    citySuggestions.innerHTML = '';
    citySuggestions.classList.remove('hidden');

    suggestions.forEach(city => {
      const suggestionItem = document.createElement('li');
      suggestionItem.textContent = city;
      suggestionItem.addEventListener('click', () => {
        cityInput.value = city;
        citySuggestions.classList.add('hidden');
      });
      citySuggestions.appendChild(suggestionItem);
    });

    if (suggestions.length === 0) {
      citySuggestions.classList.add('hidden');
    }
  }

  // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–µ–Ω—é –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∏—è –∑–∞—è–≤–∫–∏ –ø–æ –∫–Ω–æ–ø–∫–µ "–û—Ç–º–µ–Ω–∞"
  document.getElementById('pin-cancel-btn').addEventListener('click', () => {
    pinMenu.classList.remove('show'); // –£–±–∏—Ä–∞–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ —Ü–µ–Ω—Ç—Ä—É
    setTimeout(() => pinMenu.classList.add('hidden'), 400); // –£–±–∏—Ä–∞–µ–º –ø–æ—Å–ª–µ –∞–Ω–∏–º–∞—Ü–∏–∏
  });

  // –ó–∞–∫—Ä–µ–ø–ª–µ–Ω–∏–µ –∑–∞—è–≤–∫–∏ –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ "–ó–∞–∫—Ä–µ–ø–∏—Ç—å" –≤ –º–µ–Ω—é
  pinConfirmButton.addEventListener('click', () => {
    pinMenu.classList.remove('show'); // –£–±–∏—Ä–∞–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ —Ü–µ–Ω—Ç—Ä—É
    setTimeout(() => pinMenu.classList.add('hidden'), 400); // –£–±–∏—Ä–∞–µ–º –ø–æ—Å–ª–µ –∞–Ω–∏–º–∞—Ü–∏–∏

    if (pinMenu.currentPinBtn) {
      pinMenu.currentPinBtn.remove(); // –£–¥–∞–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ó–∞–∫—Ä–µ–ø–∏—Ç—å"

      // –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
      const lightningImg = document.createElement('img');
      lightningImg.src = "https://raw.githubusercontent.com/Tarikul-Islam-Anik/Telegram-Animated-Emojis/main/Animals%20and%20Nature/High%20Voltage.webp";
      lightningImg.alt = "High Voltage";
      lightningImg.width = 25;
      lightningImg.height = 25;
      lightningImg.style.animation = 'moveDownLeft 1s linear forwards'; // –ê–Ω–∏–º–∞—Ü–∏—è

      pinMenu.currentOrderElement.appendChild(lightningImg); // –î–æ–±–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    }
  });

  cityInput.addEventListener('input', updateCitySuggestions);
  cityInput.addEventListener('blur', () => {
    setTimeout(() => {
      citySuggestions.classList.add('hidden');
    }, 200);
  });

  createOrderButton?.addEventListener('click', openOrderForm);
  cancelOrderButton?.addEventListener('click', closeOrderForm);
  submitOrderButton?.addEventListener('click', submitOrder);
  viewActiveOrdersButton?.addEventListener('click', () => showPage('orders'));

  showPage('home');
});
